#! /usr/bin/env bash
# $1 should be the domain, Ex: hiderrt1.boss
#
# creates the default base virutalenv and installs yum libraries needed.

if [ "$#" -ne 2 ]; then
    echo "ERROR.  Illegal number of arguments.  Script takes a two arguments: domain_name bucket_name"
else
   cd /home/ec2-user

   # needed for BLAS before installing numpy
   export ATLAS=./usr/lib64/atlas/libatlas.so
   export BLAS=./usr/lib64/atlas/libptf77blas.so
   export LAPACK=./usr/lib64/atlas/liblapack.so

   if [ -d ~/virtualenvs/$1 ]; then
      echo delete previous virtualenv for $1
      rm -rf ~/virtualenvs/$1
   fi

   python3 -m virtualenv ~/virtualenvs/$1
   source ~/virtualenvs/$1/bin/activate

   # copy the BLAS libraries into relative directories
   mkdir ~/virtualenvs/$1/lib64/atlas
   cp /usr/lib64/atlas/libatlas.so.3 ~/virtualenvs/$1/lib64/atlas
   cp /usr/lib64/atlas/libptf77blas.so.3 ~/virtualenvs/$1/lib64/atlas
   cp /usr/lib64/atlas/libf77blas.so.3 ~/virtualenvs/$1/lib64/atlas
   cp /usr/lib64/atlas/libptcblas.so.3 ~/virtualenvs/$1/lib64/atlas
   cp /usr/lib64/atlas/libcblas.so.3 ~/virtualenvs/$1/lib64/atlas
   cp /usr/lib64/atlas/liblapack.so.3 ~/virtualenvs/$1/lib64/atlas

   cp /usr/lib64/libgfortran.so.3 ~/virtualenvs/$1/lib64/atlas
   cp /usr/lib64/libquadmath.so.0 ~/virtualenvs/$1/lib64/atlas

   cd ~/virtualenvs/$1/lib/python3.6/site-packages

   # cloud formation config should have already zipped spdb, lambda, lambda-utils and bossutils from local machine.
   unzip /home/ec2-user/sitezips/${1}.zip -d /home/ec2-user/virtualenvs/$1/lib/python3.6/site-packages

   # set the correct log config
   echo configuring logging
   cd ~/virtualenvs/$1/local/lib/python3.6/site-packages/bossutils/
   mv ./lambda_logger_conf.json ./logger_conf.json

   cd ~/virtualenvs/$1/lib/python3.6/site-packages

   # Fix ndingest folder name.
   mv ndingest.git ndingest

   # Fix spdb folder name.
   mv spdb.git spdb
   cd spdb
   pip install -t ~/virtualenvs/$1/local/lib/python3.6/dist-packages -r requirements.txt

   cd c_lib/c_version
   cp makefile_LINUX makefile
   make

   echo zipping up lambda and sending to s3
   if [ -e ~/lambdazips/lambda.${1}.zip ]
   then
      rm ~/lambdazips/lambda.${1}.zip
   fi

   if [ -e  ~/lambdazips/multilambda.${1}.zip ]; then
      rm  ~/lambdazips/multilambda.${1}.zip
   fi

   cd ~/virtualenvs/${1}/local/lib/python3.6/dist-packages
   chmod -R 077 *
   zip -r9 ~/lambdazips/multilambda.${1}.zip *

   cd ~/virtualenvs/${1}/local/lib/python3.6/site-packages
   chmod -R 077 *
   zip -r9 ~/lambdazips/multilambda.${1}.zip *

   cd ~/virtualenvs/${1}/lib64/atlas
   zip -r9 ~/lambdazips/multilambda.${1}.zip *

   cd ~/virtualenvs/${1}/local/lib/python3.6/site-packages/lambda
   zip -g ~/lambdazips/multilambda.${1}.zip lambda_loader.py

   python ~/virtualenvs/${1}/lib/python3.6/site-packages/lambdautils/deploy_lambdas.py /home/ec2-user/virtualenvs/$1 ~/lambdazips/multilambda.${1}.zip $2 --upload-only

   echo deactivating
   deactivate
fi
