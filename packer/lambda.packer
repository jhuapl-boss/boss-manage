{
    "description": "Build the Amazon Linux AMI for building the lambda environment.",
    "variables": {
        "aws_access_key": "If the default value is null, then the user variable will be required",
        "aws_access_key": null,
        "aws_secret_key": null,

        "aws_region": "us-east-1",

        "aws_instance_type": "t2.micro",

        "aws_source_ami": "Amazon Linux AMI 2017.09.0 (HVM), SSD Volume Type",
        "aws_source_ami": "ami-8c1be5f6",

        "aws_bastion_ip": "IP of the APL bastion server",
        "aws_bastion_ip": "",
        "aws_bastion_user": "User name to login to the bastion server",
        "aws_bastion_user": "",
        "aws_bastion_priv_key_file": "Path to the bastion's private key file",
        "aws_bastion_priv_key_file": "",

        "vb_source_path": "The source OVF image to build upon",
        "vb_source_path": "output/virtualbox-default/virtualbox-default.ovf",



        "name": "The hostname and minion ID of the VM",
        "name": null,
        "name_suffix": "An optional suffix for the build name",
        "name_suffix": "",

        "role": "What type of role is the VM filling (web|db|etc)",
        "role": null,

        "commit": "Commit hash of the repository version being built from",
        "commit": "unknown",

        "force_deregister": "Force the deregister of AWS AMIs",
        "force_deregister": "false"
    },

    "builders": [{
        "type": "amazon-ebs",
        "access_key": "{{user `aws_access_key`}}",
        "secret_key": "{{user `aws_secret_key`}}",
        "ssh_username": "ec2-user",
        "ami_name": "Using the '.boss' suffix to make sure our names are unique in AWS",
        "ami_name": "{{user `name`}}.boss{{user `name_suffix`}}",
        "ami_description": "AMI configured for running as a / the {{user `role`}} server",
        "source_ami": "{{user `aws_source_ami`}}",
        "instance_type": "{{user `aws_instance_type`}}",
        "region": "{{user `aws_region`}}",
        "tags": {
            "Role": "{{user `role`}}",
            "Commit": "{{user `commit`}}"
        },
        "ssh_bastion_username": "{{user `aws_bastion_user`}}",
        "ssh_bastion_host": "{{user `aws_bastion_ip`}}",
        "ssh_bastion_private_key_file": "{{user `aws_bastion_priv_key_file`}}",
        "force_deregister" : "true"
    }],

    "provisioners": [
        {   "type": "Update the hostname in /etc/hosts, /etc/hostname, and in memory",
            "type": "shell",
            "inline": [
                "sudo sed -i \"s/`hostname`/{{user `name`}}/\" /etc/hosts",
                "sudo sh -c 'echo {{user `name`}} > /etc/hostname'",
                "sudo hostname -F /etc/hostname"
            ]
        },
        {
            "type": "shell",
            "inline": [
                "echo 'Manually installing SaltStack.'",
                "echo '(our version of Packer fails to bootstrap SaltStack compatible with Amazon Linux)'",
                "curl -L https://bootstrap.saltstack.com -o install_salt.sh",
                "sudo sh install_salt.sh -P",
                "rm -f install_salt.sh"
            ]
        },
        {
            "type": "salt-masterless",
            "skip_bootstrap": true,
            "local_state_tree": "../salt_stack/salt",
            "remote_state_tree": "/srv/salt",
            "local_pillar_roots": "../salt_stack/pillar",
            "remote_pillar_roots": "/srv/pillar"
        }
    ]
}
