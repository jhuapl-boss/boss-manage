[
  {
    "Path": "/service-role/",
    "PolicyDocument": {
      "Statement": [
        {
          "Action": [
            "dynamodb:DeleteItem",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:Scan",
            "dynamodb:UpdateItem"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:dynamodb:==region==:==account==:table/*"
        }
      ],
      "Version": "2012-10-17"
    },
    "PolicyName": "AWSLambdaMicroserviceExecutionRole-2ee1090c-8266-4f05-b910-9951ec0ab658"
  },
  {
    "Path": "/service-role/",
    "PolicyDocument": {
      "Statement": [
        {
          "Action": [
            "s3:GetObject"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:s3:::*"
        }
      ],
      "Version": "2012-10-17"
    },
    "PolicyName": "AWSLambdaS3ExecutionRole-2a0110ca-6e60-4f94-8510-fdaf9ddfb583"
  },
  {
    "Path": "/",
    "PolicyDocument": {
      "Statement": [
        {
          "Action": [
            "cloudformation:*"
          ],
          "Effect": "Allow",
          "Resource": [
            "*"
          ],
          "Sid": "Stmt1447442907000"
        },
        {
          "Action": [
            "rds:*",
            "cloudwatch:DescribeAlarms",
            "cloudwatch:GetMetricStatistics",
            "ec2:DescribeAccountAttributes",
            "ec2:DescribeAvailabilityZones",
            "ec2:DescribeSecurityGroups",
            "ec2:DescribeSubnets",
            "ec2:DescribeVpcs",
            "sns:ListSubscriptions",
            "sns:ListTopics",
            "logs:DescribeLogStreams",
            "logs:GetLogEvents"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": "ec2:*",
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": "elasticloadbalancing:*",
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": "cloudwatch:*",
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": "autoscaling:*",
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "sqs:*"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "cloudwatch:*",
            "cloudformation:*",
            "cognito-identity:ListIdentityPools",
            "cognito-sync:GetCognitoEvents",
            "cognito-sync:SetCognitoEvents",
            "dynamodb:*",
            "events:*",
            "iam:List*",
            "iam:Get*",
            "iam:ListRolePolicies",
            "iam:ListRoles",
            "iam:PassRole",
            "kinesis:DescribeStream",
            "kinesis:ListStreams",
            "kinesis:PutRecord",
            "lambda:*",
            "logs:*",
            "s3:*",
            "sns:ListSubscriptions",
            "sns:ListSubscriptionsByTopic",
            "sns:ListTopics",
            "sns:Subscribe",
            "sns:Unsubscribe",
            "ec2:DescribeVpcs",
            "ec2:DescribeSubnets",
            "ec2:DescribeSecurityGroups",
            "iot:GetTopicRule",
            "iot:ListTopicRules",
            "iot:CreateTopicRule",
            "iot:ReplaceTopicRule",
            "iot:AttachPrincipalPolicy",
            "iot:AttachThingPrincipal",
            "iot:CreateKeysAndCertificate",
            "iot:CreatePolicy",
            "iot:CreateThing",
            "iot:ListPolicies",
            "iot:ListThings",
            "iot:DescribeEndpoint"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": "elasticache:*",
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": "s3:*",
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "dynamodb:*",
            "cloudwatch:DeleteAlarms",
            "cloudwatch:DescribeAlarmHistory",
            "cloudwatch:DescribeAlarms",
            "cloudwatch:DescribeAlarmsForMetric",
            "cloudwatch:GetMetricStatistics",
            "cloudwatch:ListMetrics",
            "cloudwatch:PutMetricAlarm",
            "datapipeline:ActivatePipeline",
            "datapipeline:CreatePipeline",
            "datapipeline:DeletePipeline",
            "datapipeline:DescribeObjects",
            "datapipeline:DescribePipelines",
            "datapipeline:GetPipelineDefinition",
            "datapipeline:ListPipelines",
            "datapipeline:PutPipelineDefinition",
            "datapipeline:QueryObjects",
            "iam:ListRoles",
            "sns:CreateTopic",
            "sns:DeleteTopic",
            "sns:ListSubscriptions",
            "sns:ListSubscriptionsByTopic",
            "sns:ListTopics",
            "sns:Subscribe",
            "sns:Unsubscribe",
            "sns:SetTopicAttributes",
            "lambda:CreateFunction",
            "lambda:ListFunctions",
            "lambda:ListEventSourceMappings",
            "lambda:CreateEventSourceMapping",
            "lambda:DeleteEventSourceMapping",
            "lambda:GetFunctionConfiguration",
            "lambda:DeleteFunction"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": "glacier:*",
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "route53:*"
          ],
          "Effect": "Allow",
          "Resource": [
            "*"
          ]
        },
        {
          "Action": [
            "elasticloadbalancing:DescribeLoadBalancers"
          ],
          "Effect": "Allow",
          "Resource": [
            "*"
          ]
        },
        {
          "Action": [
            "acm:*"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "sns:*"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "cloudwatch:*",
            "cognito-identity:ListIdentityPools",
            "cognito-sync:GetCognitoEvents",
            "cognito-sync:SetCognitoEvents",
            "dynamodb:*",
            "events:*",
            "iam:ListAttachedRolePolicies",
            "iam:ListRolePolicies",
            "iam:ListRoles",
            "iam:PassRole",
            "kinesis:DescribeStream",
            "kinesis:ListStreams",
            "kinesis:PutRecord",
            "lambda:*",
            "logs:*",
            "s3:*",
            "sns:ListSubscriptions",
            "sns:ListSubscriptionsByTopic",
            "sns:ListTopics",
            "sns:Subscribe",
            "sns:Unsubscribe",
            "ec2:DescribeVpcs",
            "ec2:DescribeSubnets",
            "ec2:DescribeSecurityGroups",
            "iot:GetTopicRule",
            "iot:ListTopicRules",
            "iot:CreateTopicRule",
            "iot:ReplaceTopicRule",
            "iot:AttachPrincipalPolicy",
            "iot:AttachThingPrincipal",
            "iot:CreateKeysAndCertificate",
            "iot:CreatePolicy",
            "iot:CreateThing",
            "iot:ListPolicies",
            "iot:ListThings",
            "iot:DescribeEndpoint"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": "states:*",
          "Effect": "Allow",
          "Resource": "*"
        }
      ],
      "Version": "2012-10-17"
    },
    "PolicyName": "aplCloudFormationFullAccess"
  },
  {
    "Path": "/",
    "PolicyDocument": {
      "Statement": [
        {
          "Action": [
            "logs:CreateLogGroup",
            "logs:CreateLogStream",
            "logs:PutLogEvents",
            "logs:DescribeLogStreams"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:logs:*:*:*"
          ]
        }
      ],
      "Version": "2012-10-17"
    },
    "PolicyName": "apl-cloudwatch-instance-logs"
  },
  {
    "Path": "/service-role/",
    "PolicyDocument": {
      "Statement": [
        {
          "Action": [
            "dynamodb:PutItem"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:dynamodb:==region==:==account==:table/*"
        },
        {
          "Action": [
            "lambda:InvokeFunction"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:lambda:==region==:==account==:function:*"
        }
      ],
      "Version": "2012-10-17"
    },
    "PolicyName": "AWSLambdaTestHarnessExecutionRole-03257ae2-b691-4ced-be24-8ddf2ef976a5"
  },
  {
    "Path": "/",
    "PolicyDocument": {
      "Statement": [
        {
          "Action": [
            "sqs:*"
          ],
          "Effect": "Allow",
          "Resource": [
            "*"
          ],
          "Sid": "Stmt1485812624000"
        }
      ],
      "Version": "2012-10-17"
    },
    "PolicyName": "aplPopulateUploadQueue"
  },
  {
    "Path": "/",
    "PolicyDocument": {
      "Statement": [
        {
          "Action": [
            "s3:ListBucket"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:s3:::church-delivery-bucket-boss"
          ]
        },
        {
          "Action": [
            "s3:PutObject",
            "s3:GetObject",
            "s3:DeleteObject"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:s3:::church-delivery-bucket-boss/*"
          ]
        }
      ],
      "Version": "2012-10-17"
    },
    "PolicyName": "aplChurchDeliveryBucketPolicy"
  },
  {
    "Path": "/",
    "PolicyDocument": {
      "Statement": [
        {
          "Action": [
            "dynamodb:*",
            "cloudwatch:DeleteAlarms",
            "cloudwatch:DescribeAlarmHistory",
            "cloudwatch:DescribeAlarms",
            "cloudwatch:DescribeAlarmsForMetric",
            "cloudwatch:GetMetricStatistics",
            "cloudwatch:ListMetrics",
            "cloudwatch:PutMetricAlarm",
            "datapipeline:ActivatePipeline",
            "datapipeline:CreatePipeline",
            "datapipeline:DeletePipeline",
            "datapipeline:DescribeObjects",
            "datapipeline:DescribePipelines",
            "datapipeline:GetPipelineDefinition",
            "datapipeline:ListPipelines",
            "datapipeline:PutPipelineDefinition",
            "datapipeline:QueryObjects",
            "iam:ListRoles",
            "sns:CreateTopic",
            "sns:DeleteTopic",
            "sns:ListSubscriptions",
            "sns:ListSubscriptionsByTopic",
            "sns:ListTopics",
            "sns:Subscribe",
            "sns:Unsubscribe",
            "sns:SetTopicAttributes",
            "lambda:CreateFunction",
            "lambda:ListFunctions",
            "lambda:ListEventSourceMappings",
            "lambda:CreateEventSourceMapping",
            "lambda:DeleteEventSourceMapping",
            "lambda:GetFunctionConfiguration",
            "lambda:DeleteFunction"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": "s3:*",
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "rds:*",
            "cloudwatch:DescribeAlarms",
            "cloudwatch:GetMetricStatistics",
            "ec2:DescribeAccountAttributes",
            "ec2:DescribeAvailabilityZones",
            "ec2:DescribeSecurityGroups",
            "ec2:DescribeSubnets",
            "ec2:DescribeVpcs",
            "sns:ListSubscriptions",
            "sns:ListTopics",
            "logs:DescribeLogStreams",
            "logs:GetLogEvents"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "sns:*"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": "states:*",
          "Effect": "Allow",
          "Resource": "*"
        }
      ],
      "Version": "2012-10-17"
    },
    "PolicyName": "aplDeleteCuboid"
  },
  {
    "Path": "/",
    "PolicyDocument": {
      "Statement": [
        {
          "Action": [
            "iam:UpdateSSHPublicKey",
            "iam:UpdateServerCertificate",
            "iam:UpdateSigningCertificate",
            "iam:UploadSSHPublicKey",
            "iam:UploadServerCertificate",
            "iam:UploadSigningCertificate"
          ],
          "Effect": "Allow",
          "Resource": [
            "*"
          ],
          "Sid": "Stmt1454613958000"
        }
      ],
      "Version": "2012-10-17"
    },
    "PolicyName": "aplUploadCertificatePolicy"
  },
  {
    "Path": "/",
    "PolicyDocument": {
      "Statement": [
        {
          "Action": [
            "sns:*",
            "iam:*",
            "rds:*",
            "s3:*",
            "lambda:*",
            "cloudformation:*",
            "dynamodb:*",
            "ec2:*",
            "elasticloadbalancing:*"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "VisualEditor0"
        }
      ],
      "Version": "2012-10-17"
    },
    "PolicyName": "apl-auto-build"
  },
  {
    "Path": "/",
    "PolicyDocument": {
      "Statement": [
        {
          "Action": [
            "aws-portal:ModifyAccount",
            "aws-portal:ModifyBilling",
            "aws-portal:ModifyPaymentMethods",
            "aws-portal:ViewAccount",
            "aws-portal:ViewBilling",
            "aws-portal:ViewPaymentMethods",
            "aws-portal:ViewUsage"
          ],
          "Effect": "Allow",
          "Resource": [
            "*"
          ],
          "Sid": "Stmt1446839853000"
        }
      ],
      "Version": "2012-10-17"
    },
    "PolicyName": "aplBillingGroupPolicy"
  },
  {
    "Path": "/service-role/",
    "PolicyDocument": {
      "Statement": [
        {
          "Action": "logs:CreateLogGroup",
          "Effect": "Allow",
          "Resource": "arn:aws:logs:==region==:==account==:*"
        },
        {
          "Action": [
            "logs:CreateLogStream",
            "logs:PutLogEvents"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:logs:==region==:==account==:log-group:/aws/lambda/check:*"
          ]
        }
      ],
      "Version": "2012-10-17"
    },
    "PolicyName": "AWSLambdaBasicExecutionRole-18e45b2f-a398-4109-8f35-b79c82f6749b"
  },
  {
    "Path": "/service-role/",
    "PolicyDocument": {
      "Statement": [
        {
          "Action": [
            "ec2:CreateNetworkInterface"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ec2:DescribeNetworkInterfaces",
            "ec2:DeleteNetworkInterface"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:ec2:==region==:==account==:network-interface/*"
        }
      ],
      "Version": "2012-10-17"
    },
    "PolicyName": "AWSLambdaVPCAccessExecutionRole-b2075bb1-0254-4f5f-abe6-c012abd2a001"
  },
  {
    "Path": "/service-role/",
    "PolicyDocument": {
      "Statement": [
        {
          "Action": [
            "dynamodb:DescribeTable",
            "dynamodb:UpdateTable",
            "cloudwatch:PutMetricAlarm",
            "cloudwatch:DescribeAlarms",
            "cloudwatch:GetMetricStatistics",
            "cloudwatch:SetAlarmState",
            "cloudwatch:DeleteAlarms"
          ],
          "Effect": "Allow",
          "Resource": "*"
        }
      ],
      "Version": "2012-10-17"
    },
    "PolicyName": "DynamoDBAutoscalePolicy"
  },
  {
    "Path": "/service-role/",
    "PolicyDocument": {
      "Statement": [
        {
          "Action": "logs:CreateLogGroup",
          "Effect": "Allow",
          "Resource": "arn:aws:logs:==region==:==account==:*"
        },
        {
          "Action": [
            "logs:CreateLogStream",
            "logs:PutLogEvents"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:logs:==region==:==account==:log-group:/aws/lambda/objectRecognitionHandler:*"
          ]
        }
      ],
      "Version": "2012-10-17"
    },
    "PolicyName": "AWSLambdaBasicExecutionRole-12d9102c-34c8-47da-9686-b9801b176487"
  },
  {
    "Path": "/",
    "PolicyDocument": {
      "Statement": [
        {
          "Effect": "Allow",
          "NotAction": [
            "iam:*",
            "aws-portal:*",
            "ses:*",
            "iot:",
            "mobileanalytics:*",
            "devicefarm:*",
            "sns:*",
            "zocalo:*"
          ],
          "Resource": "*"
        }
      ],
      "Version": "2012-10-17"
    },
    "PolicyName": "aplInstanceOwnerPolicy"
  },
  {
    "Path": "/service-role/",
    "PolicyDocument": {
      "Statement": [
        {
          "Action": "logs:CreateLogGroup",
          "Effect": "Allow",
          "Resource": "arn:aws:logs:==region==:==account==:*"
        },
        {
          "Action": [
            "logs:CreateLogStream",
            "logs:PutLogEvents"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:logs:==region==:==account==:log-group:/aws/lambda/SnowballTest:*"
          ]
        }
      ],
      "Version": "2012-10-17"
    },
    "PolicyName": "AWSLambdaBasicExecutionRole-28085153-2e10-4740-8166-7090f779f1c7"
  },
  {
    "Path": "/",
    "PolicyDocument": {
      "Statement": [
        {
          "Action": [
            "sns:*",
            "ec2:*",
            "cloudformation:*",
            "sqs:*"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "VisualEditor0"
        }
      ],
      "Version": "2012-10-17"
    },
    "PolicyName": "apl-lambda-test-build"
  },
  {
    "Path": "/",
    "PolicyDocument": {
      "Statement": [
        {
          "Action": [
            "dynamodb:PutItem",
            "lambda:InvokeFunction",
            "dynamodb:DeleteItem",
            "dynamodb:Query",
            "dynamodb:UpdateItem",
            "s3:ListBucket",
            "logs:CreateLogGroup",
            "logs:PutLogEvents",
            "s3:PutObject",
            "s3:GetObject",
            "logs:CreateLogStream",
            "sns:Publish",
            "dynamodb:GetItem"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "VisualEditor0"
        },
        {
          "Action": [
            "sqs:DeleteMessage",
            "sqs:DeleteMessageBatch",
            "sqs:SendMessageBatch",
            "sqs:ReceiveMessage",
            "sqs:DeleteQueue",
            "sqs:SendMessage",
            "sqs:GetQueueAttributes",
            "sqs:CreateQueue"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:sqs:*:*:downsample-*",
          "Sid": "VisualEditor1"
        }
      ],
      "Version": "2012-10-17"
    },
    "PolicyName": "aplResolutionHierarchy"
  },
  {
    "Path": "/",
    "PolicyDocument": {
      "Statement": [
        {
          "Action": [
            "dynamodb:DescribeLimits",
            "dynamodb:DescribeTimeToLive",
            "dynamodb:ListTagsOfResource",
            "dynamodb:DescribeReservedCapacityOfferings",
            "dynamodb:DescribeReservedCapacity",
            "dynamodb:ListTables",
            "dynamodb:BatchGetItem",
            "dynamodb:BatchWriteItem",
            "dynamodb:CreateTable",
            "dynamodb:DeleteItem",
            "dynamodb:GetItem",
            "dynamodb:GetRecords",
            "dynamodb:PutItem",
            "dynamodb:Query",
            "dynamodb:UpdateItem",
            "dynamodb:Scan",
            "dynamodb:DescribeTable"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:dynamodb:==region==:==account==:table/vault.*"
          ],
          "Sid": "StorageBackend"
        },
        {
          "Action": [
            "ec2:DescribeInstances",
            "iam:GetInstanceProfile",
            "iam:GetUser",
            "iam:GetRole"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "AwsAuthBackend"
        },
        {
          "Action": [
            "iam:AttachUserPolicy",
            "iam:CreateAccessKey",
            "iam:CreateUser",
            "iam:DeleteAccessKey",
            "iam:DeleteUser",
            "iam:DeleteUserPolicy",
            "iam:DetachUserPolicy",
            "iam:ListAccessKeys",
            "iam:ListAttachedUserPolicies",
            "iam:ListGroupsForUser",
            "iam:ListUserPolicies",
            "iam:PutUserPolicy",
            "iam:RemoveUserFromGroup"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::==account==:user/vault-*"
          ],
          "Sid": "AwsSecretBackend"
        }
      ],
      "Version": "2012-10-17"
    },
    "PolicyName": "aplVaultPolicy"
  }
]