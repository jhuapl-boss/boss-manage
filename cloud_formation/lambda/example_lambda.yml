---
name: multilambda
runtime: python3.6
include:
        salt_stack/salt/spdb/files/spdb.git: spdb
        salt_stack/salt/boss-tools/files/boss-tools.git/bossutils: bossutils
        salt_stack/salt/boss-tools/files/boss-tools.git/cloudwatchwrapper: cloudwatchwrapper
        salt_stack/salt/boss-tools/files/boss-tools.git/lambda: lambda
        salt_stack/salt/boss-tools/files/boss-tools.git/lambdautils: lambdautils
        salt_stack/salt/ndingest/files/ndingest.git: ndingest
        lib/heaviside.git/heaviside: heaviside
        lib/heaviside.git/requirements.txt: heaviside/requirements.txt
        lib/names.py: bossnames/names.py
        lib/bucket_object_tags.py: bossnames/bucket_object_tags.py
        lib/__init__.py: bossnames/__init__.py
system_packages:
        - atlas
        - atlas-devel
python_packages:
        - spdb/requirements.txt
        - heaviside/requirements.txt
manual_commands:
        - |
                cd spdb/c_lib/c_version
                cp makefile_LINUX makefile
                make
        - | # Should this be a manual command or a list of files to be copied into the staging directory
                cp /usr/lib64/atlas/libatlas.so.3 .
...
---
name: dynamodb_autoscale # run through lib/names.py:AWSNames to provide the zip file name
runtime: nodejs10.x
include:
        cloud_formation/lambda/dynamodb-lambda-autoscale: .
manual_commands:
        - |
                npm install
        - |
                # Move the creation of the Region.json file into write_config_file
                npm run build
output_file: dist.zip # the manual commands section will produce this file and the runner doesn't need to zip up the directory to upload
...
