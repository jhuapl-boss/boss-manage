"""Step function that fansout the enqueuing of cuboid keys across multiple
step functions.

Sample input:
{
    "id_index_step_fcn": "arn:aws:states:us-east-1:...",
    "batch_enqueue_cuboids_step_fcn": "arn:aws:states:us-east-1:...",
    "fanout_enqueue_cuboids_step_fcn": "arn:aws:states:us-east-1:...",
    "config": {
      "object_store_config": {
        "id_count_table": "idCount.domain.boss",
        "page_in_lambda_function": "multiLambda-domain-boss",
        "page_out_lambda_function": "multiLambda-domain-boss",
        "cuboid_bucket": "cuboids.domain.boss",
        "s3_index_table": "s3index.domain.boss",
        "id_index_table": "idIndex.domain.boss",
        "s3_flush_queue": "https://queue.amazonaws.com/...",
        "id_index_new_chunk_threshold": 100,
        "index_deadletter_queue": "https://queue.amazonaws.com/...",
        "index_cuboids_keys_queue": "https://queue.amazonaws.com/..."
      },
      "kv_config": {
        "cache_host": "cache.domain.boss",
        "read_timeout": 86400,
        "cache_db": "0"
      },
      "state_config": {
        "cache_state_db": "0",
        "cache_state_host": "cache-state.domain.boss"
      }
    },
    "max_items": 100,
    "lookup_key": "...",
    "exclusive_start_key": "",
    "first_time": false,
    "obj_keys": [...]       # These are the keys to be enqueued.
}
"""

version: '1.0'
timeout: 300

Pass()
    """UpdateOperationField
    Simply adds the name of the operation so it can be logged properly in the
    deadletter queue in case of a failure when fanning out.
    """
    result: '$.operation'
    data: 
        ['FanoutEnqueueCuboidsKeys']

Pass()
    """SetFanoutParameters
    """
    result: '$.fanout_params'
    data:
        {
            "max_concurrent": 3,
            "rampup_delay": 4,
            "rampup_backoff": 0.5,
            "status_delay": 1
        }

while '$.finished' == False:
    """WhileStillFanningOut
    """
    Lambda('indexFanoutEnqueueCuboidsKeysLambda')
        """FanoutEnqueueCuboidsKeys

        fanout_enqueue_cuboid_keys_lambda.py
        """
        catch []: '$.result'
            Lambda('indexWriteFailedLambda')
                """FanoutEnqueueFailed
                """
                retry ['KeyError'] 1 0 1.0
                retry [] 10 2 2.0
                catch []: '$.dlqresult'
                    Fail('Exception', 'Failed to write to dead letter queue')
                        """FailSendingFanoutToDeadLetterQueue
                        """
            Fail('Exception', 'Failed fanning out enqueue cuboid key step functions')
                """FailFanningOut
                """

    Wait(seconds=1)
        """WaitFor1Second
        """

Success()
    """Success
    """

